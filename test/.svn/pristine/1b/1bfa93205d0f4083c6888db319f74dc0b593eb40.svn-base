<?php
/**
 * Created by originThink
 * Author: seaboyer@163.com
 * Date: 2019/7/26
 */

namespace app\index\controller;

use think\facade\Cache;
use think\Controller;

use app\api\model\CommonBaseModel;
use app\api\model\ydhl\ParityProduct as ParityProductModel;
use app\api\model\ydxq\ShopGoods as ShopGoodsModel;
use app\api\model\btjnew\Sign as SignModel;

use think\Db;
use think\Exception;
use think\exception\DbException;

//use splitWord\splitWord;
//use sameStr\sameStr;

class ActionAuto extends BaseController
{
    /*
     * seaboyer的一些批量处理方法的入口
     *
     */
    public function index()
    {
        $act = $this->request->param("act");

        if (!empty($act) && stripos($act, 'index_') !== false) {

            if (method_exists($this, $act)) {
                $this->$act();
            } else {
                echo "<div align='center'>no function : " . $act . "</div>";
            }
        }
    }

    /**
     * 注意：阿里实际调用不是标准5分钟整，比如本次0点0分1秒调用，下次0点5分01以后多10、20几秒调用，
     * 所以如果是一天运行一次任务，注意扩大5分的2倍10分钟内来判断，调用方法内判断是否运行过！！！
     * 每5分钟需要执行的脚本，注意不要运行时间太长(超过30秒)
     */
    public function auto_m5()
    {
        $time = time();

        //需要执行的方法
        $this->index_yk3();

        $time2 = time();
        $this->index_zt46();
        $m_ShopGoods = new ShopGoodsModel();
        $m_ShopGoods->querySql("insert into ims_auto_run_log (run_type,result,create_time,end_time) values(1,1,{$time},{$time2})");

        echo "ok";
    }

    /**
     * 每15分钟需要执行的脚本，注意不要运行时间太长(超过30秒)
     */
    public function auto_m15()
    {
        $time = time();

        //需要执行的方法
        $time_now = date('His');
        $run_time_start = 0;//'000001'
        $run_time_end = 3100;//'003100'
        //一天执行一次的任务
        if ($time_now > $run_time_start && $time_now < $run_time_end) {
            $this->index_hk();
            $this->index_yk4();
            $this->index_zt47();
        }

        $time2 = time();
        $m_ShopGoods = new ShopGoodsModel();
        $m_ShopGoods->querySql("insert into ims_auto_run_log (run_type,result,create_time,end_time) values(2,1,{$time},{$time2})");
        echo "ok";
    }

    /**
     * 每30分钟需要执行的脚本，注意不要运行时间太长(超过30秒)
     */
    public function auto_m30()
    {
        $time = time();

        //需要执行的方法

        $time2 = time();
        $m_ShopGoods = new ShopGoodsModel();
        $m_ShopGoods->querySql("insert into ims_auto_run_log (run_type,result,create_time,end_time) values(3,1,{$time},{$time2})");
        echo "ok";
    }

    /**
     * 每60分钟需要执行的脚本，注意不要运行时间太长(超过30秒)
     */
    public function auto_m60()
    {
        $time = time();

        //需要执行的方法

        $time2 = time();
        $m_ShopGoods = new ShopGoodsModel();
        $m_ShopGoods->querySql("insert into ims_auto_run_log (run_type,result,create_time,end_time) values(4,1,{$time},{$time2})");
        echo "ok";
    }

    //----------------------------------------------------//


    function arraySequence($array, $field, $sort = 'SORT_DESC')
    {
        $arrSort = array();
        foreach ($array as $uniqid => $row) {
            foreach ($row as $key => $value) {
                $arrSort[$key][$uniqid] = $value;
            }
        }
        array_multisort($arrSort[$field], constant($sort), $array);
        return $array;
    }


    /**
     * @param string $table
     * @param array $data
     * @return bool|string
     */
    function insertIntoSql($table = '', $data = array())
    {
        if (empty($data) || !is_array($data) || empty($table)) {
            return false;
        }
        $sql = 'INSERT INTO ' . $table . '(';
        $sql_val = 'values ';
        foreach ($data as $key => $value) {
            if ($key == 0) {
                $s_key = '';
                foreach ($value as $s_k => $s_v) {
                    $s_key .= $s_k . ',';
                }
                $sql .= rtrim($s_key, ',') . ')';
            }
            $s_val = '(';
            foreach ($value as $val) {
                $s_val .= "'" . $val . "',";
            }
            $sql_val .= rtrim($s_val, ',') . '),';
        }
        $sql_val = rtrim($sql_val, ',');
        $inster_sql = $sql . $sql_val;
        return $inster_sql;
    }

    /**
     * @param $str1
     * @param $str2
     * @return float
     */
    function str_same_percent($str1, $str2)
    {
        similar_text($str1, $str2, $percent);
        $percent = round($percent, 2);
        return $percent;
    }


//    1.1客户初步盘点
//    将有开放供应链的超市划分为以下等级：
//    S ：25及以上，50%以上分类有经营,有雇员
//    A ：25及以上，50%以上分类有经营
//    B : 15-24  ，50%以上分类有经营
//    C : 10-14  ，50%及以上分类有经营
//    D : 5-9    ，30%及以上分类有经营
//    0 :
    /**
     * 清洗potential_customer_data数据//阿里云定时任务每5分钟运行
     * 这个表只是新增，所以跑过一遍的数据update_time>0不用再次运算，除非计算规则变化。
     */
    public function index_yk3()
    {
        set_time_limit(0);
        ini_set('memory_limit', '512M');

        //$time = time();
        $m_bb_brand = new SignModel();
        echo time() . "<br>";
        $time = time();
        $sql_customer_data = "SELECT * from potential_customer_data where update_time = 0";
        $list_customer_data = $m_bb_brand->querySql($sql_customer_data);
        $one_data = array();
        foreach ($list_customer_data as $one) {
            $has_employee = $one['employee'];
            $one_data = null;
            $k = 0;
            foreach ($one as $two) {
                if ($k > 0 && $k < 11) {
                    $one_data[] = $two;
                }
                $k++;
            }
            $cate_sum = array_sum($one_data);

            $cate_count = 0;
            foreach ($one_data as $three) {
                if (!empty($three)) {
                    $cate_count++;
                }
            }
            //print_r($one_data);
            $jing_ying = round($cate_count * 100 / 10, 1);
            if ($cate_sum >= 25 && $jing_ying >= 50 && $has_employee == 1) {
                $score_level = 'S';
            } elseif ($cate_sum >= 25 && $jing_ying >= 50) {
                $score_level = 'A';
            } elseif ($cate_sum >= 15 && $jing_ying >= 50) {
                $score_level = 'B';
            } elseif ($cate_sum >= 10 && $jing_ying >= 50) {
                $score_level = 'C';
            } elseif ($cate_sum >= 5 && $jing_ying >= 30) {
                $score_level = 'D';
            } else {
                $score_level = '0';
            }
            echo $one['id'] . " : " . $cate_sum . " + " . $jing_ying . " = " . $score_level . "<br>";
            //exit;
            $m_bb_brand->querySql("update potential_customer_data set score_level = '{$score_level}',update_time={$time} where id = {$one['id']}");

        }

    }

    /**
     * 通过openid洗potential_customer字段
     * 昵称（shop-member写到种子用户） 头像（shop-member写入种子用户）
     * 姓名（加字段，收货地址中的姓名写入种子用户表） 电话（收货地址中的电话写入种子用户表）
     */
    public function index_yk4()
    {
        //set_time_limit(0);
        ini_set('max_execution_time', 0);
        ini_set('memory_limit', '1024M');

        $time = time();
        $m_ShopGoodsModel = new ShopGoodsModel();
        $m_SignModel = new SignModel();
        echo time() . "<br>";

        $sql_ShopGoodsModel = "SELECT id,xcx_openid from potential_customer where is_validity = 1 and xcx_openid <> '' order by id asc ";
        $list_potential_customer = $m_SignModel->querySql($sql_ShopGoodsModel);
        foreach ($list_potential_customer as $two) {
            $sql_ShopGoodsModel = "SELECT id,nickname,avatar from ims_ewei_shop_member where openid ='{$two['xcx_openid']}' ";
            $list_shop_member = $m_ShopGoodsModel->querySql($sql_ShopGoodsModel);
            if (count($list_shop_member) > 0) {
                $nickname = str_replace("'", '’', $list_shop_member[0]['nickname']);
                $nickname = str_replace("\\", '', $nickname);
                $avatar = $list_shop_member[0]['avatar'];

                $sql_shop_member_address = "SELECT id,realname,mobile from ims_ewei_shop_member_address where openid ='{$two['xcx_openid']}' order by id desc limit 1";
                $list_shop_member_address = $m_ShopGoodsModel->querySql($sql_shop_member_address);
                $sql_address = '';
                if (count($list_shop_member_address) > 0) {
                    $realname = $list_shop_member_address[0]['realname'];
                    $mobile = $list_shop_member_address[0]['mobile'];
                    $sql_address = ",real_name = '{$realname}' , telphone = '{$mobile}'";
                }

                if (!empty($sql_address) || !empty($nickname) || !empty($avatar)) {
                    $one_sql = "update potential_customer set header_url = '{$avatar}',wx_name = '{$nickname}'  {$sql_address} where id = {$two['id']}";
                    echo $one_sql . "<br>";
                    $m_SignModel->executeSql($one_sql);
                }
            }
        }
        echo time() . "<br>";
    }

    /**
     * index_hk
     */
    public function index_hk()
    {
        $url = "http://btjapi.yundian168.com/connection/getrankingcron";
        $curl = curl_init(); // 启动一个CURL会话
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_HEADER, 0);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); // 跳过证书检查
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);  // 从证书中检查SSL加密算法是否存在
        $tmpInfo = curl_exec($curl);     //返回api的json对象
//关闭URL请求
        curl_close($curl);
    }

    /**
     * 清洗10月份ims_ewei_shop_order表中bd_money的值
     * 统计1小时内订单业务员业提成金额
     */
    public function index_zt46()
    {
        //set_time_limit(0);
        ini_set('max_execution_time', 0);
        ini_set('memory_limit', '1024M');

        $time = time();
        $m_ShopGoodsModel = new ShopGoodsModel();
        echo time() . "<br>";
        //$day_start = strtotime('2019-10-01');
        $day_start = time() - 60 * 60 * 2;

        $sql_shop_order = "SELECT id from ims_ewei_shop_order where supplier_id = 461 and (createtime > {$day_start} or finishtime >  {$day_start}) and price >=1 and bd_money = 0 order by id asc ";
        $list_shop_order = $m_ShopGoodsModel->querySql($sql_shop_order);
        echo count($list_shop_order) . "<br>";
        foreach ($list_shop_order as $one) {
            $sql_shop_order_goods = "SELECT a.id,a.price,b.bb_cate1 from ims_ewei_shop_order_goods a left join ims_ewei_shop_goods b on a.goodsid = b.id where a.orderid = {$one['id']} order by id asc ";
            $list_shop_order_goods = $m_ShopGoodsModel->querySql($sql_shop_order_goods);

            $bd_money = 0;
            foreach ($list_shop_order_goods as $two) {
                if (!empty($two['bb_cate1'] == 10)) {
                    $bd_money = $bd_money + round($two['price'] * 0.04, 2);
                } else {
                    $bd_money = $bd_money + round($two['price'] * 0.02, 2);
                }
            }
            $one_sql = "update ims_ewei_shop_order set bd_money = '{$bd_money}' where id = {$one['id']}";
            $m_ShopGoodsModel->executeSql($one_sql);
            echo $one_sql . "<br>";
        }

        echo time() . "<br>";
    }

    /**
     * 统计每天种子用户信息
     */
    public function index_zt47()
    {
        //set_time_limit(0);
        ini_set('max_execution_time', 0);
        ini_set('memory_limit', '1024M');

        $time = time();
        $s_time = date('Y-m-d', $time);
        //$today = date('Ymd', $time);
        $time_s = strtotime($s_time) - 60 * 60 * 24 * 1;
        $time_e = $time_s + 60 * 60 * 24 * 1;
        $today = date('Ymd', $time_s);
        $m_ShopGoodsModel = new ShopGoodsModel();
        $m_SignModel = new SignModel();
        //echo time() . "<br>";
        ec();

        //提前数组列出循环里需要的数据，减少sql查询时间//
        //1.今日订单记录(下单)
        $sql_shop_order = "SELECT id,openid,createtime,bd_money,status from ims_ewei_shop_order where createtime > {$time_s} and createtime < {$time_e} order by id asc ";
        $list_shop_order = $m_ShopGoodsModel->querySql($sql_shop_order);
        $arr_shop_order = array();
        foreach ($list_shop_order as $one) {
            $openid = $one['openid'];
            unset($one['openid']);
            $arr_shop_order[$openid][] = $one;
        }
        unset($list_shop_order);
        ec($arr_shop_order);

        //2.今日订单记录(收款)
        $sql_shop_order2 = "SELECT id,openid,createtime,bd_money,status from ims_ewei_shop_order where paytime > {$time_s} and paytime < {$time_e} order by id asc ";
        $list_shop_order2 = $m_ShopGoodsModel->querySql($sql_shop_order2);
        $arr_shop_order2 = array();
        foreach ($list_shop_order2 as $one) {
            $openid = $one['openid'];
            unset($one['openid']);
            $arr_shop_order2[$openid][] = $one;
        }
        unset($list_shop_order2);
        ec($arr_shop_order2);

        //3.所有地址记录
        $sql_shop_member_address = "SELECT id,openid from ims_ewei_shop_member_address where  id > 0 order by id asc";
        $list_shop_member_address = $m_ShopGoodsModel->querySql($sql_shop_member_address);
        $arr_shop_member_address = array();
        foreach ($list_shop_member_address as $one) {
            $arr_shop_member_address[$one['openid']] = $one['id'];
        }
        unset($list_shop_member_address);
        ec($arr_shop_member_address);

        //4.今日已有记录
        $sql_supplier_day_count = "SELECT id,openid from ims_yd_supplier_day_count_log where today = {$today} ";
        $list_supplier_day_count = $m_ShopGoodsModel->querySql($sql_supplier_day_count);
        $arr_supplier_day_count = array();
        foreach ($list_supplier_day_count as $one) {
            $arr_supplier_day_count[$one['openid']] = $one['id'];
        }
        unset($list_supplier_day_count);
        ec($arr_supplier_day_count);

        //5.今日埋点记录
        $sql_member_action_log = "SELECT id,createtime,log_type,log_info,openid from ims_member_action_log where createtime > {$time_s} and createtime < {$time_e} order by id desc";
        $list_member_action_log = $m_ShopGoodsModel->querySql($sql_member_action_log);
        $arr_member_action_log = array();
        foreach ($list_member_action_log as $one) {
            $openid = $one['openid'];
            unset($one['openid']);
            $arr_member_action_log[$openid][] = $one;
        }
        unset($list_member_action_log);
        ec($arr_member_action_log);

        //6.所有点位数据
        $sql_potential_customer = "SELECT id,xcx_openid from potential_customer where is_validity = 1 and xcx_openid <> '' order by id asc ";//limit 1000
        $list_potential_customer = $m_SignModel->querySql($sql_potential_customer);
        ec($list_potential_customer);

        foreach ($list_potential_customer as $two) {
            $openid = $two['xcx_openid'];
            //echo $openid."<br>";
//            $sql_shop_member_address = "SELECT id from ims_ewei_shop_member_address where  openid ='{$openid}' order by id desc";
//            $list_shop_member_address = $m_ShopGoodsModel->querySql($sql_shop_member_address);
            $has_address = 0;
            if (isset($arr_shop_member_address[$openid])) {
                $has_address = $arr_shop_member_address[$openid];
            }
//            $sql_member_action_log = "SELECT id,createtime,log_type,log_info from ims_member_action_log where createtime > {$time_s} and openid ='{$openid}' order by createtime desc";
//            $list_member_action_log = $m_ShopGoodsModel->querySql($sql_member_action_log);
            if (isset($arr_member_action_log[$openid])) {
                $list_member_action_log = $arr_member_action_log[$openid];
            } else {
                $list_member_action_log = array();
            }
            $read_count = 0;//count($list_member_action_log);
            $read_time = 0;
            $cart_count = 0;
            $cart_time = 0;
            $arr_goods = array();
            $cart_goods = 0;
            foreach ($list_member_action_log as $one) {
                if ($read_count == 0) {
                    $read_time = $one['createtime'];
                }
                if ($one['log_type'] == 14) {
                    if ($cart_count == 0) {
                        $cart_time = $one['createtime'];
                    }
                    $cart_count++;
                    if (empty($arr_goods)) {
                        $arr_goods[] = $one['log_info'];
                    } else {
                        if (!in_array($one['log_info'], $arr_goods)) {
                            $arr_goods[] = $one['log_info'];
                        }
                    }
                }
                $read_count++;
            }
            $cart_goods = count($arr_goods);

//            $sql_shop_order = "SELECT id,createtime,bd_money,status from ims_ewei_shop_order where createtime > {$time_s} and openid ='{$openid}' order by createtime desc";
//            $list_shop_order = $m_ShopGoodsModel->querySql($sql_shop_order);

            if (isset($arr_shop_order[$openid])) {
                $list_shop_order = $arr_shop_order[$openid];
            } else {
                $list_shop_order = array();
            }
            $order_count = 0;
            $order_time = 0;
            $cancel_order_count = 0;
            $cancel_order_time = 0;
            $money_feature = 0;
            $money_ready = 0;
            foreach ($list_shop_order as $one) {
                //
                if ($one['status'] == -1) {
                    if ($cancel_order_count == 0) {
                        $cancel_order_time = $one['createtime'];
                    }
                    $cancel_order_count++;
                } else {
                    $order_time = $one['createtime'];
                    if ($one['status'] == 1) {
                        //$money_ready = $money_ready + $one['bd_money'];
                    } else {
                        $money_feature = $money_feature + $one['bd_money'];
                    }
                }
                $order_count++;
            }

            if (isset($arr_shop_order2[$openid])) {
                $list_shop_order2 = $arr_shop_order2[$openid];
            } else {
                $list_shop_order2 = array();
            }

            foreach ($list_shop_order2 as $one) {
                $money_ready = $money_ready + $one['bd_money'];
            }

            $str_all = "{$read_count},{$read_time},{$cart_count},{$cart_goods},{$order_count},{$cancel_order_count}";
            $arr_all = explode(',', $str_all);
            if (array_sum($arr_all) > 0) {
                //$sql_supplier_day_count = "SELECT id from ims_yd_supplier_day_count where openid ='{$openid}' and today = {$today} ";
                //$list_supplier_day_count = $m_ShopGoodsModel->querySql($sql_supplier_day_count);
                if (isset($arr_supplier_day_count[$openid])) {
                    $one_sql = "update ims_yd_supplier_day_count_log set has_address = {$has_address},read_count={$read_count},read_time = {$read_time},cart_count={$cart_count},cart_time={$cart_time},cart_goods={$cart_goods},order_count={$order_count},order_time={$order_time},cancel_order_count={$cancel_order_count},cancel_order_time={$cancel_order_time},money_feature={$money_feature},money_ready={$money_ready},update_time = {$time}  where id = {$arr_supplier_day_count[$openid]}";
                } else {
                    $one_sql = "insert into ims_yd_supplier_day_count_log (type,sup_id,today,openid,has_address,read_count,read_time,cart_count,cart_time,cart_goods,order_count,order_time,cancel_order_count,cancel_order_time,money_feature,money_ready,create_time) values(1,461,{$today},'{$openid}',{$has_address},{$read_count},{$read_time},{$cart_count},{$cart_time},{$cart_goods},{$order_count},{$order_time},{$cancel_order_count},{$cancel_order_time},{$money_feature},{$money_ready},{$time})";
                }
                echo $one_sql . "<br>";
                $m_ShopGoodsModel->executeSql($one_sql);
            }

        }

        ec();
    }

    /**
     * index_zt47_pro
     */
    public function index_zt47_pro()
    {
        //set_time_limit(0);
        ini_set('max_execution_time', 0);
        ini_set('memory_limit', '1024M');

        $day = $this->request->param('day', '');
        if (empty($day)) {
            $time = time();
        } else {
            $time = strtotime($day);
        }

        $s_time = date('Y-m-d', $time);
        $time_s = strtotime($s_time) - 60 * 60 * 24 * 1;
        $time_e = $time_s + 60 * 60 * 24 * 1;
        $today = date('Ymd', $time_s);
        $m_ShopGoodsModel = new ShopGoodsModel();
        $m_SignModel = new SignModel();
        //echo time() . "<br>";
        ec();

        //提前数组列出循环里需要的数据，减少sql查询时间//
        //1.今日订单记录(下单)
        $sql_shop_order = "SELECT id,openid,createtime,bd_money,status from ims_ewei_shop_order where createtime > {$time_s} and createtime < {$time_e} order by id asc ";
        $list_shop_order = $m_ShopGoodsModel->querySql($sql_shop_order);
        $arr_shop_order = array();
        foreach ($list_shop_order as $one) {
            $openid = $one['openid'];
            unset($one['openid']);
            $arr_shop_order[$openid][] = $one;
        }
        unset($list_shop_order);
        ec($arr_shop_order);

        //2.今日订单记录(收款)
        $sql_shop_order2 = "SELECT id,openid,createtime,bd_money,status from ims_ewei_shop_order where paytime > {$time_s} and paytime < {$time_e} order by id asc ";
        $list_shop_order2 = $m_ShopGoodsModel->querySql($sql_shop_order2);
        $arr_shop_order2 = array();
        foreach ($list_shop_order2 as $one) {
            $openid = $one['openid'];
            unset($one['openid']);
            $arr_shop_order2[$openid][] = $one;
        }
        unset($list_shop_order2);
        ec($arr_shop_order2);

        //3.所有地址记录
        $sql_shop_member_address = "SELECT id,openid from ims_ewei_shop_member_address where  id > 0 order by id asc";
        $list_shop_member_address = $m_ShopGoodsModel->querySql($sql_shop_member_address);
        $arr_shop_member_address = array();
        foreach ($list_shop_member_address as $one) {
            $arr_shop_member_address[$one['openid']] = $one['id'];
        }
        unset($list_shop_member_address);
        ec($arr_shop_member_address);

        //4.今日已有记录
        $sql_supplier_day_count = "SELECT id,openid from ims_yd_supplier_day_count_log where today = {$today} ";
        $list_supplier_day_count = $m_ShopGoodsModel->querySql($sql_supplier_day_count);
        $arr_supplier_day_count = array();
        foreach ($list_supplier_day_count as $one) {
            $arr_supplier_day_count[$one['openid']] = $one['id'];
        }
        unset($list_supplier_day_count);
        ec($arr_supplier_day_count);

        //5.今日埋点记录
        $sql_member_action_log = "SELECT id,createtime,log_type,log_info,openid from ims_member_action_log where createtime > {$time_s} and createtime < {$time_e} order by id desc";
        $list_member_action_log = $m_ShopGoodsModel->querySql($sql_member_action_log);
        $arr_member_action_log = array();
        foreach ($list_member_action_log as $one) {
            $openid = $one['openid'];
            unset($one['openid']);
            $arr_member_action_log[$openid][] = $one;
        }
        unset($list_member_action_log);
        ec($arr_member_action_log);

        //6.所有点位数据
        $sql_potential_customer = "SELECT id,xcx_openid from potential_customer where is_validity = 1 and xcx_openid <> '' order by id asc ";//limit 1000
        $list_potential_customer = $m_SignModel->querySql($sql_potential_customer);
        ec($list_potential_customer);

        foreach ($list_potential_customer as $two) {
            $openid = $two['xcx_openid'];
            //echo $openid."<br>";
//            $sql_shop_member_address = "SELECT id from ims_ewei_shop_member_address where  openid ='{$openid}' order by id desc";
//            $list_shop_member_address = $m_ShopGoodsModel->querySql($sql_shop_member_address);
            $has_address = 0;
            if (isset($arr_shop_member_address[$openid])) {
                $has_address = $arr_shop_member_address[$openid];
            }
//            $sql_member_action_log = "SELECT id,createtime,log_type,log_info from ims_member_action_log where createtime > {$time_s} and openid ='{$openid}' order by createtime desc";
//            $list_member_action_log = $m_ShopGoodsModel->querySql($sql_member_action_log);
            if (isset($arr_member_action_log[$openid])) {
                $list_member_action_log = $arr_member_action_log[$openid];
            } else {
                $list_member_action_log = array();
            }
            $read_count = 0;//count($list_member_action_log);
            $read_time = 0;
            $cart_count = 0;
            $cart_time = 0;
            $arr_goods = array();
            $cart_goods = 0;
            foreach ($list_member_action_log as $one) {
                if ($read_count == 0) {
                    $read_time = $one['createtime'];
                }
                if ($one['log_type'] == 14) {
                    if ($cart_count == 0) {
                        $cart_time = $one['createtime'];
                    }
                    $cart_count++;
                    if (empty($arr_goods)) {
                        $arr_goods[] = $one['log_info'];
                    } else {
                        if (!in_array($one['log_info'], $arr_goods)) {
                            $arr_goods[] = $one['log_info'];
                        }
                    }
                }
                $read_count++;
            }
            $cart_goods = count($arr_goods);

//            $sql_shop_order = "SELECT id,createtime,bd_money,status from ims_ewei_shop_order where createtime > {$time_s} and openid ='{$openid}' order by createtime desc";
//            $list_shop_order = $m_ShopGoodsModel->querySql($sql_shop_order);

            if (isset($arr_shop_order[$openid])) {
                $list_shop_order = $arr_shop_order[$openid];
            } else {
                $list_shop_order = array();
            }
            $order_count = 0;
            $order_time = 0;
            $cancel_order_count = 0;
            $cancel_order_time = 0;
            $money_feature = 0;
            $money_ready = 0;
            foreach ($list_shop_order as $one) {
                //
                if ($one['status'] == -1) {
                    if ($cancel_order_count == 0) {
                        $cancel_order_time = $one['createtime'];
                    }
                    $cancel_order_count++;
                } else {
                    $order_time = $one['createtime'];
                    if ($one['status'] == 1) {
                        //$money_ready = $money_ready + $one['bd_money'];
                    } else {
                        $money_feature = $money_feature + $one['bd_money'];
                    }
                }
                $order_count++;
            }

            if (isset($arr_shop_order2[$openid])) {
                $list_shop_order2 = $arr_shop_order2[$openid];
            } else {
                $list_shop_order2 = array();
            }

            foreach ($list_shop_order2 as $one) {
                $money_ready = $money_ready + $one['bd_money'];
            }

            $str_all = "{$read_count},{$read_time},{$cart_count},{$cart_goods},{$order_count},{$cancel_order_count}";
            $arr_all = explode(',', $str_all);
            if (array_sum($arr_all) > 0) {
                //$sql_supplier_day_count = "SELECT id from ims_yd_supplier_day_count where openid ='{$openid}' and today = {$today} ";
                //$list_supplier_day_count = $m_ShopGoodsModel->querySql($sql_supplier_day_count);
                if (isset($arr_supplier_day_count[$openid])) {
                    $one_sql = "update ims_yd_supplier_day_count_log set has_address = {$has_address},read_count={$read_count},read_time = {$read_time},cart_count={$cart_count},cart_time={$cart_time},cart_goods={$cart_goods},order_count={$order_count},order_time={$order_time},cancel_order_count={$cancel_order_count},cancel_order_time={$cancel_order_time},money_feature={$money_feature},money_ready={$money_ready},update_time = {$time}  where id = {$arr_supplier_day_count[$openid]}";
                } else {
                    $one_sql = "insert into ims_yd_supplier_day_count_log (type,sup_id,today,openid,has_address,read_count,read_time,cart_count,cart_time,cart_goods,order_count,order_time,cancel_order_count,cancel_order_time,money_feature,money_ready,create_time) values(1,461,{$today},'{$openid}',{$has_address},{$read_count},{$read_time},{$cart_count},{$cart_time},{$cart_goods},{$order_count},{$order_time},{$cancel_order_count},{$cancel_order_time},{$money_feature},{$money_ready},{$time})";
                }
                echo $one_sql . "<br>";
                $m_ShopGoodsModel->executeSql($one_sql);
            }

        }

        ec();
    }







}


