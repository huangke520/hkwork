<?php
/**
 * ceadr 2019-08-13
 */

namespace app\api\controller;

use PHPWord_IOFactory;
use PHPWord_Style_Cell;
use think\Db;
use think\Debug;
use think\Exception;

class Test extends BaseController {
    public function __construct() {
        parent::__construct();
    }

    public function test(){
//        phpinfo();exit;
        \think\facade\Debug::remark('begin');
        for ($i = 1; $i < 100000000; $i++){
            $i_arr = str_split($i);
            $i_num = count($i_arr);
            $mi = 0;
            foreach ($i_arr as $one){
                $mi = $mi + pow($one,$i_num);
            }
//            if($mi == $i){
//                echo $i.'<br>';
//            }
        }
        \think\facade\Debug::remark('end');
        echo \think\facade\Debug::getRangeTime('begin','end').'s';
    }

    public function word(){
        header("Content-Type: text/html; charset=UTF-8");
        require_once __DIR__."/../../../vendor/phpoffice/phpword/PHPWord.php";
        $PHPWord = new \PHPWord();
        $PHPWord->addFontStyle('rStyle', array('bold' => true, 'italic' => true, 'size' => 16));
        $PHPWord->addParagraphStyle('pStyle', array('align' => 'center', 'spaceAfter' => 100));
        $PHPWord->addTitleStyle(1, array('bold' => true), array('spaceAfter' => 240));
        $section = $PHPWord->createSection();//创建新页面
        $PHPWord->setDefaultFontName('宋体'); // 全局字体
        $PHPWord->setDefaultFontSize(11);     // 全局字号为3号
        $fontStyle = [
            'name' => 'Microsoft Yahei UI',
            'size' => 20,
            'color' => '#ff6600',
            'bold' => true
        ];
        $url = [
            'http://www.gsfpjd.com/wx/view/mzjDetail.jsp?id=2e4e82fc6e56c5a2ab08ad7d8a3a25eeb36b022f153e8677&xm=852be5e18203d67d-59d9eed027c23ffa&uuid=a427c496-8906-4588-9fa5-7e3723b38a82',
        ];
        foreach ($url as $one_url) {
            $word = array();
            //        header("Content-type:text/html;charset=utf-8");
            $abc = file_get_contents($one_url);
            //姓名
            $find = "title\">姓名:";
            $tmp = stripos($abc, $find);
            $xingming = substr($abc, $tmp, 100);
            $xingming_arr = explode('</span>', $xingming);
            $xingming = strstr($xingming_arr[1], 'tent">');
            $xingming = str_replace('tent">', '', $xingming);
            $word['xingming'] = $xingming;
            //性别
            $find = "title\">性别:";
            $tmp = stripos($abc, $find);
            $xingbie = substr($abc, $tmp, 100);
            $xingbie_arr = explode('</span>', $xingbie);
            $xingbie = strstr($xingbie_arr[1], 'tent">');
            $xingbie = str_replace('tent">', '', $xingbie);
            $word['xingbie'] = $xingbie;
            //身份证号
            $find = "title\">身份证号:";
            $tmp = stripos($abc, $find);
            $shenfenzhenghao = substr($abc, $tmp, 100);
            $shenfenzhenghao_arr = explode('</span>', $shenfenzhenghao);
            $shenfenzhenghao = strstr($shenfenzhenghao_arr[1], 'tent">');
            $shenfenzhenghao = str_replace('tent">', '', $shenfenzhenghao);
            $word['shenfenzhenghao'] = $shenfenzhenghao;
            //家庭地址
            $find = "right: 2.1%;\">家庭地址:";
            $tmp = stripos($abc, $find);
            $jiatingdizhi = substr($abc, $tmp, 300);
            $jiatingdizhi_arr = explode('</span>', $jiatingdizhi);
            $jiatingdizhi = strstr($jiatingdizhi_arr[1], 'idden;">');
            $jiatingdizhi = str_replace('idden;">', '', $jiatingdizhi);
            $word['jiatingdizhi'] = $jiatingdizhi;

            //本年发放金额
            $find = "z-title\">本年发放金额";
            $tmp = stripos($abc, $find);
            $bennianfafangjinee = substr($abc, $tmp, 100);
            $bennianfafangjinee_arr = explode('</p>', $bennianfafangjinee);
            $bennianfafangjinee = strstr($bennianfafangjinee_arr[1], 'lass="z-content">');
            $bennianfafangjinee = str_replace('lass="z-content">', '', $bennianfafangjinee);
            $word['bennianfafangjinee'] = $bennianfafangjinee;
            //本年发放次数
            $find = "z-title\">本年发放次数";
            $tmp = stripos($abc, $find);
            $bennianfafangcishu = substr($abc, $tmp, 100);
            $bennianfafangcishu_arr = explode('</p>', $bennianfafangcishu);
            $bennianfafangcishu = strstr($bennianfafangcishu_arr[1], 'lass="z-content">');
            $bennianfafangcishu = str_replace('lass="z-content">', '', $bennianfafangcishu);
            $word['bennianfafangcishu'] = $bennianfafangcishu;
            //合计发放金额
            $find = "z-title\">合计发放金额";
            $tmp = stripos($abc, $find);
            $hejifafangjinee = substr($abc, $tmp, 100);
            $hejifafangjinee_arr = explode('</p>', $hejifafangjinee);
            $hejifafangjinee = strstr($hejifafangjinee_arr[1], 'lass="z-content">');
            $hejifafangjinee = str_replace('lass="z-content">', '', $hejifafangjinee);
            $word['hejifafangjinee'] = $hejifafangjinee;
            //合计发放次数
            $find = "z-title\">合计发放次数";
            $tmp = stripos($abc, $find);
            $hejifafangcishu = substr($abc, $tmp, 100);
            $hejifafangcishu_arr = explode('</p>', $hejifafangcishu);
            $hejifafangcishu = strstr($hejifafangcishu_arr[1], 'lass="z-content">');
            $hejifafangcishu = str_replace('lass="z-content">', '', $hejifafangcishu);
            $word['hejifafangcishu'] = $hejifafangcishu;

            //发放
            $fafang_arr = explode('<div class="list-title">', $abc);
            $fafang_arr_v2 = array();
            foreach ($fafang_arr as $one) {
                $a = strstr($one, '政策说明>></span>');
                if (!empty($a)) {
                    $fafang_arr_v2[] = substr($one, 0, strpos($one, '政策说明>></span>'));
                }
            }

            $word['fafang'] = array();
            foreach ($fafang_arr_v2 as $one) {
                $yige = array();
                $fafang_one = explode('</span>', $one);
                //标题
                $title = strstr($fafang_one[0], '<span>');
                $title = str_replace('<span>', '', $title);
                $yige['title'] = $title;
                //发放日期
                $fafangriqi = str_replace('<span class="count-content">', '', $fafang_one[2]);
                $fafangriqi = str_replace('		', '', $fafangriqi);
                $fafangriqi = str_replace('
    ', '', $fafangriqi);
                $yige['fafangriqi'] = $fafangriqi;
                //            echo $fafangriqi;
                //发放地址
                $fafangdizhi = str_replace('<span class="count-content">', '', $fafang_one[4]);
                $fafangdizhi = str_replace('		', '', $fafangdizhi);
                $fafangdizhi = str_replace('
    ', '', $fafangdizhi);
                $yige['fafangdizhi'] = $fafangdizhi;
                //发放金额
                $fafangjinee = str_replace('<span class="amount-content">', '', $fafang_one[6]);
                $fafangjinee = str_replace('		', '', $fafangjinee);
                $fafangjinee = str_replace('
    ', '', $fafangjinee);
                $yige['fafangjinee'] = $fafangjinee;
                //备注内容
                $beizhuneirong = str_replace('<div  class="amount-remark" onClick="checkRemark(this);"><span>', '', $fafang_one[9]);
                $beizhuneirong = str_replace('		', '', $beizhuneirong);
                $beizhuneirong = str_replace('
    ', '', $beizhuneirong);
                $yige['beizhuneirong'] = $beizhuneirong;
                $word['fafang'][] = $yige;
            }
            //        echo "<pre>";print_r($word);exit;
            $section->addText($word['xingming'], ['bold' => true]);
            $section->addText('    个人基础信息', ['bold' => true]);
            $section->addText('        姓名：' . $word['xingming']);
            $section->addText('        性别：' . $word['xingbie']);
            $section->addText('        身份证号：' . $word['shenfenzhenghao']);
            $section->addText('        家庭地址：' . $word['jiatingdizhi']);

            $section->addText('    资金发放统计', ['bold' => true]);
            $section->addText('        本年发放金额：' . $word['bennianfafangjinee']);
            $section->addText('        本年发放次数：' . $word['bennianfafangcishu']);
            $section->addText('        合计发放金额：' . $word['hejifafangjinee']);
            $section->addText('        合计发放次数：' . $word['hejifafangcishu']);

            foreach ($word['fafang'] as $one) {
                $section->addText('        ' . $one['title'], ['bold' => true]);
                $section->addText('            发放日期：' . $one['fafangriqi']);
                $section->addText('            发放地址：' . $one['fafangdizhi']);
                $section->addText('            发放金额：' . $one['fafangjinee']);
                $section->addText('            备注内容：' . $one['beizhuneirong']);
            }
        }
        $file = 'test.docx';
        header("Content-Description: File Transfer");
        header('Content-Disposition: attachment; filename="' . $file . '"');
        header('Content-Type: application/vnd.openxmlformats-officedocument.wordprocessingml.document');
        header('Content-Transfer-Encoding: binary');
        header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
        header('Expires: 0');
        $xmlWriter = PHPWord_IOFactory::createWriter($PHPWord, 'Word2007');
        $xmlWriter->save("php://output");

//        $objWriter = PHPWord_IOFactory::createWriter($PHPWord, 'Word2007');
//        $objWriter->save('demo.doc');
    }

    public function editOrder(){
        echo "<pre>";

//        $a = unserialize('a:18:{s:2:"id";s:2:"37";s:7:"uniacid";s:1:"4";s:6:"openid";s:35:"sns_wa_ogrIh0WqvR60SSnBFOToV7Acwt5o";s:8:"realname";s:6:"洋洋";s:6:"mobile";s:11:"13522051943";s:8:"province";s:9:"北京市";s:4:"city";s:9:"北京市";s:4:"area";s:9:"丰台区";s:7:"address";s:49:"北京市丰台区南庭新苑北区19--1--101室";s:9:"isdefault";s:1:"1";s:7:"zipcode";s:0:"";s:7:"deleted";s:1:"0";s:6:"street";s:0:"";s:9:"datavalue";s:20:"110000 110100 110106";s:15:"streetdatavalue";s:0:"";s:3:"lng";s:0:"";s:3:"lat";s:0:"";s:8:"is_range";s:2:"-1";}');
//        print_r($a);
//        echo '自提<br>';
//        $a = unserialize('a:18:{s:2:"id";s:2:"37";s:7:"uniacid";s:1:"4";s:6:"openid";s:35:"sns_wa_ogrIh0WqvR60SSnBFOToV7Acwt5o";s:8:"realname";s:6:"洋洋";s:6:"mobile";s:11:"13522051943";s:8:"province";s:9:"北京市";s:4:"city";s:9:"北京市";s:4:"area";s:9:"丰台区";s:7:"address";s:49:"北京市丰台区南庭新苑北区19--1--101室";s:9:"isdefault";s:1:"1";s:7:"zipcode";s:0:"";s:7:"deleted";s:1:"0";s:6:"street";s:0:"";s:9:"datavalue";s:20:"110000 110100 110106";s:15:"streetdatavalue";s:0:"";s:3:"lng";s:0:"";s:3:"lat";s:0:"";s:8:"is_range";s:2:"-1";}');
//        print_r($a);exit;

        $where = [
//                ['b.is_c', '=', 1],
            ['s.supplier_id', '=', 461],
            ['s.status', '>', -1],
            ['s.delivery_type', '<>', 1],
        ];
        $where[] = ['s.createtime', '>=', 1567785600];
        $shop_order_list = Db::connect('db_ydxq_test_xianshang')->table('ims_ewei_shop_order')->alias('s')->leftJoin('ims_yd_supplier b', 's.openid = b.openid')->field('s.id,s.ordersn,s.createtime,b.name,b.nickname,s.price,s.address,s.delivery_type,s.remark,s.status,s.order_type')->where($where)->order('id desc')->select();
        $new_shop_order = array();
        if (!empty(count($shop_order_list))) {
            foreach ($shop_order_list as $key => $value) {

                unset($new_order);
                $new_order['id'] = $value['id'];//订单ID
                $new_order['ordersn'] = $value['ordersn'];//第三方订单号
                $new_order['createtime'] = !empty($value['createtime']) ? date('Y-m-d H:i:s', $value['createtime']) : '';//订单时间
                $new_order['name'] = $value['name'];//店铺名称
                $new_order['nickname'] = $value['nickname'];//店主昵称
                $new_order['price'] = $value['price'];//订单价格

                if ($value['delivery_type'] == 1) {
                    $new_order['delivery_type'] = '配送';
                    try {
                        $address = unserialize($value['address']);
                    } catch (Exception $exceptione) {
                        $address = '';
                    }
                    if (!empty($address)) {
                        $new_order['realname'] = $address['realname'];//接收人真实姓名
                        $new_order['phone'] = $address['mobile'];//接收人真实联系电话
                        $new_order['address'] = $address['address'];//接收人配送地址
                    } else {
                        $new_order['realname'] = '';//接收人真实姓名
                        $new_order['phone'] = '';//接收人真实联系电话
                        $new_order['address'] = '';//接收人配送地址
                    }
                } else {
                    try {
                        $address = unserialize($value['address']);
                    } catch (Exception $exceptione) {
                        $address = '';
                    }
                    $new_order['delivery_type'] = '自提';
                    $new_order['realname'] = '';//接收人真实姓名
                    $new_order['phone'] = '';//接收人真实联系电话
                    $new_order['address'] = '';//接收人配送地址
                }
                $new_order['remark'] = $value['remark'];//备注

                //查询状态
                if ($value['status'] == 3) {
                    $status = '<span style="color: green;">已完成</span>';
                } elseif ($value['status'] == 1) {
                    $status = '已支付';
                } elseif ($value['status'] == 0) {
                    $status = '<span style="color: red;">待支付</span>';
                } elseif ($value['status'] == 2) {
                    $status = '<span style="color: green;">已确认</span>';
                } else {
                    $status = '<span style="color: red;">已取消</span>';
                }
                $new_order['order_type'] = $value['order_type'];
                $new_order['status'] = $status;
                $new_order['type'] = $value['status'];
                $new_shop_order[] = $new_order;
            }
        }
        print_r($new_shop_order);
    }

    public function moren(){
//        echo 3;exit;
        //查询商品
        $db_mini_mall = new \app\api\model\ydxq\Supplier();
        $goods_res = $db_mini_mall->querySql("SELECT id,jd_name,`code`,spec,price from ims_goods_code WHERE `code` in(SELECT `code` from (SELECT `code`,COUNT(`code`) as cc from ims_goods_code_info GROUP BY `code` HAVING cc > 4 ORDER BY cc desc) as a) and jd_name <> '' ORDER BY id DESC");
        //商品名，条码，规格，价格
        $title = ['商品名','条码','规格','价格'];
        $data = [];
        foreach ($goods_res as $one){
            $data[] = [
                $one['jd_name'],
                $one['code'],
                $one['spec'],
                $one['price'],
            ];
        }
        $this->exportExcel($title,$data,'默认商品表');
    }

    function exportExcel($title = array(), $data = array(), $fileName = '', $savePath = './', $isDown = true) {
//        include_once 'PHPExcel-1.8/Classes/PHPExcel.php';
        require_once __DIR__ . '/../../../vendor/phpoffice/phpexcel/Classes/PHPExcel.php';
        $obj = new \PHPExcel();
        //横向单元格标识
        $cellName = array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'AA', 'AB', 'AC', 'AD', 'AE', 'AF', 'AG', 'AH', 'AI', 'AJ', 'AK', 'AL', 'AM', 'AN', 'AO', 'AP', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AV', 'AW', 'AX', 'AY', 'AZ');
        $obj->getActiveSheet(0)->setTitle('sheet名称');   //设置sheet名称
        $_row = 1;   //设置纵向单元格标识
        if ($title) {
            $_cnt = count($title);
            $obj->getActiveSheet(0)->mergeCells('A' . $_row . ':' . $cellName[$_cnt - 1] . $_row);   //合并单元格
            $obj->setActiveSheetIndex(0)->setCellValue('A' . $_row, '数据导出：' . date('Y-m-d H:i:s'));  //设置合并后的单元格内容
            $_row++;
            $i = 0;
            foreach ($title AS $v) {   //设置列标题
                $obj->setActiveSheetIndex(0)->setCellValue($cellName[$i] . $_row, $v);
                $i++;
            }
            $_row++;
        }
        //填写数据
        if ($data) {
            $i = 0;
            foreach ($data AS $_v) {
                $j = 0;
                foreach ($_v AS $_cell) {
                    $obj->getActiveSheet(0)->setCellValue($cellName[$j] . ($i + $_row), $_cell);
                    $j++;
                }
                $i++;
            }
        }
        //文件名处理
        if (!$fileName) {
            $fileName = uniqid(time(), true);
        }
        $objWrite = \PHPExcel_IOFactory::createWriter($obj, 'Excel5');
        if ($isDown) {   //网页下载
            ob_end_clean();
            header('pragma:public');
            header("Content-Disposition:attachment;filename=$fileName.xls");
            $objWrite->save('php://output');
            exit;
        }
        $_fileName = iconv("utf-8", "gb2312", $fileName);   //转码
        $_savePath = $savePath . $_fileName . '.xlsx';
        $objWrite->save($_savePath);
        return $savePath . $fileName . '.xlsx';
    }

    /**
     * 转换shop_goods表中的skuid
     * @throws Exception
     */
    public function updateData(){
        exit('转换shop_goods表中的skuid');
        //查询孙宇店铺商品
        $goods_list = Db::connect('db_mini_mall')->table('ims_ewei_shop_goods')->alias('a')->leftJoin('ims_yd_supplier_goods b','a.id = b.goods_id')->field('a.id,a.skuid')->where([['supplier_id','=','461'],['skuid','<>','']])->select();
        foreach ($goods_list as $key => $value){
            if(!empty($value['skuid'])){
                //查询ims_bb_sku表中的id和goods_id
                $bb_sku_id = Db::connect('db_mini_mall')->table('ims_bb_sku')->where([['hbsj_sku_id','=',$value['skuid']]])->field('id')->find();
                if(!empty($bb_sku_id)){
                    //更新shop_goods表中的skuid
                    $update = array();
                    $update['skuid'] = $bb_sku_id['id'];
                    $update['hbsj_sku_id'] = $value['skuid'];
                    Db::connect('db_mini_mall')->table('ims_ewei_shop_goods')->where([['id','=',$value['id']]])->update($update);
                }
            }
        }
    }

    /**
     * 转换分类ID
     */
    public function updateCate(){
        $goods_list = Db::connect('db_mini_mall')->table('ims_bb_goods_item')->field('id,cate_bb1,cate_bb2,brand_id')->where([['hbsj_cate1','=',0]])->select();
        foreach ($goods_list as $key => $value){
            $update = array();
            //更新一级分类
            if(!empty($value['cate_bb1'])){
                $bb_sku_id = Db::connect('db_mini_mall')->table('ims_bb_cate_bb')->where([['hbsj_cate_id','=',$value['cate_bb1']],['hbsj_cate_fid','=',0]])->field('id')->find();
                if(!empty($bb_sku_id)){
                    //更新shop_goods表中的skuid
                    $update['cate_bb1'] = $bb_sku_id['id'];
                    $update['hbsj_cate1'] = $value['cate_bb1'];
//                    Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
                }
            }

            //更新二级分类
            if(!empty($value['cate_bb2'])){
                $bb_sku_id = Db::connect('db_mini_mall')->table('ims_bb_cate_bb')->where([['hbsj_cate_id','=',$value['cate_bb2']]])->field('id')->find();
                if(!empty($bb_sku_id)){
                    //更新shop_goods表中的skuid
//                    $update = array();
                    $update['cate_bb2'] = $bb_sku_id['id'];
                    $update['hbsj_cate2'] = $value['cate_bb2'];
//                    Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
                }
            }

            //更新品牌
            if(!empty($value['brand_id'])){
                $bb_sku_id = Db::connect('db_mini_mall')->table('ims_bb_brand')->where([['hbsj_id','=',$value['brand_id']]])->field('id')->find();
                if(!empty($bb_sku_id)){
                    //更新shop_goods表中的skuid
//                    $update = array();
                    $update['brand_id'] = $bb_sku_id['id'];
                    $update['hbsj_brand_id'] = $value['brand_id'];
//                    Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
                }
            }
            if(!empty($update)){
                Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
            }
        }
    }

    public function updateCate_zt(){
        //one
        $one_cate =  Db::connect('db_mini_mall')->table('ims_bb_cate_bb')->where([['hbsj_cate_fid','=',0]])->field('id,hbsj_cate_id')->select();
        $one_cate_arr = array();
        foreach ($one_cate as $key => $value){
            $one_cate_arr[$value['hbsj_cate_id']] = $value['id'];
        }
        unset($one_cate);

        //two
        $two_cate =  Db::connect('db_mini_mall')->table('ims_bb_cate_bb')->where([['hbsj_cate_fid','<>',0]])->field('id,hbsj_cate_id')->select();
        $two_cate_arr = array();
        foreach ($two_cate as $key => $value){
            $two_cate_arr[$value['hbsj_cate_id']] = $value['id'];
        }
        unset($two_cate);

        //brand
        $brand_res = Db::connect('db_mini_mall')->table('ims_bb_brand')->field('id,hbsj_id')->select();
        $brand_arr = array();
        foreach ($brand_res as $key => $value){
            $brand_arr[$value['hbsj_id']] = $value['id'];
        }
        unset($brand_res);

        $goods_list = Db::connect('db_mini_mall')->table('ims_bb_goods_item')->field('id,cate_bb1,cate_bb2,brand_id')->where([['hbsj_cate1','=',0]])->select();
        foreach ($goods_list as $key => $value){
            $update = array();
            //更新一级分类
            if(!empty($value['cate_bb1'])){
//                $bb_sku_id = Db::connect('db_mini_mall')->table('ims_bb_cate_bb')->where([['hbsj_cate_id','=',$value['cate_bb1']],['hbsj_cate_fid','=',0]])->field('id')->find();
//                if(!empty($bb_sku_id)){
//                    //更新shop_goods表中的skuid
//                    $update['cate_bb1'] = $bb_sku_id['id'];
//                    $update['hbsj_cate1'] = $value['cate_bb1'];
////                    Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
//                }
                if(!empty($one_cate_arr[$value['cate_bb1']])){
                    //更新shop_goods表中的skuid
                    $update['cate_bb1'] = $one_cate_arr[$value['cate_bb1']];
                    $update['hbsj_cate1'] = $value['cate_bb1'];
//                    Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
                }
            }

            //更新二级分类
            if(!empty($value['cate_bb2'])){
//                $bb_sku_id = Db::connect('db_mini_mall')->table('ims_bb_cate_bb')->where([['hbsj_cate_id','=',$value['cate_bb2']]])->field('id')->find();
//                if(!empty($bb_sku_id)){
//                    //更新shop_goods表中的skuid
////                    $update = array();
//                    $update['cate_bb2'] = $bb_sku_id['id'];
//                    $update['hbsj_cate2'] = $value['cate_bb2'];
////                    Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
//                }
                if(!empty($two_cate_arr[$value['cate_bb2']])){
                    //更新shop_goods表中的skuid
                    $update['cate_bb2'] = $two_cate_arr[$value['cate_bb2']];
                    $update['hbsj_cate2'] = $value['cate_bb2'];
//                    Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
                }
            }

            //更新品牌
            if(!empty($value['brand_id'])){
//                $bb_sku_id = Db::connect('db_mini_mall')->table('ims_bb_brand')->where([['hbsj_id','=',$value['brand_id']]])->field('id')->find();
//                if(!empty($bb_sku_id)){
//                    //更新shop_goods表中的skuid
////                    $update = array();
//                    $update['brand_id'] = $bb_sku_id['id'];
//                    $update['hbsj_brand_id'] = $value['brand_id'];
////                    Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
//                }
                if(!empty($brand_arr[$value['brand_id']])){
                    $update['brand_id'] = $brand_arr[$value['brand_id']];
                    $update['hbsj_brand_id'] = $value['brand_id'];
                }
            }
            if(!empty($update)){
                Db::connect('db_mini_mall')->table('ims_bb_goods_item')->where([['id','=',$value['id']]])->update($update);
            }
        }
    }

    /**
     * 转换供应商
     */
    public function updateChannel(){

    }
}
?>